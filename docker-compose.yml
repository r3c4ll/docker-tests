# docker-compose.yml

version: '3.3'

services:

  kubo:
    image: ipfs/kubo:latest
    container_name: kubo
    volumes:
      - ./home/ipfs/data:/data/ipfs
      - ./home/ipfs/staging:/export
    ports:
      - "4001:4001"
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8081:8081"
      - "127.0.0.1:5001:5001"
    environment:
      - VIRTUAL_HOST="${KUBO_VIRTUAL_HOST}"
      - VIRTUAL_PORT="${KUBO_VIRTUAL_PORT}"
    networks:
      - backend-vlan
      - frontend-vlan
    restart: always

  neblio:
    image: neblioteam/nebliod:latest
    #build: ./neblio
    container_name: neblio
    volumes:
      - $HOME/neblio-data:/root/.neblio
      - ./neblio/files/neblio.conf:/root/.neblio/neblio.conf
    ports:
      - "6325:6325"
      - "6326:6326"
    environment:
      - VIRTUAL_HOST="${NEBLIO_VIRTUAL_HOST}"
      - VIRTUAL_PORT="${NEBLIO_VIRTUAL_PORT}"
    networks:
      - backend-vlan
      - frontend-vlan
    restart: always

  vef-bis:
    build: ./vef-bis
    container_name: vef-bis
    volumes:
      - $HOME/vef-bis-data:/home
    ports:
      - "8000:9000"
    environment:
      - VIRTUAL_HOST="${VEF-BIS_VIRTUAL_HOST}"
      - VIRTUAL_PORT="${VEF-BIS_VIRTUAL_PORT}"
    networks:
      - backend-vlan
      - frontend-vlan
    depends_on:
      - kubo
      - neblio

  #venftappserver:
  #  image: deerajdocker/veframework.docker.venftappserver
  #  container_name: venftappserver
  #  ports:
  #    - "8090:80"
  #  environment:
  #    - VIRTUAL_HOST="${VENFTAPPSERVER_VIRTUAL_HOST}"
  #    - VIRTUAL_PORT="${VENFTAPPSERVER_VIRTUAL_PORT}"
  #  networks:
  #    - backend-vlan
  #    - frontend-vlan
  #  depends_on:
  #    - kubo
  #    - neblio

  bis-gw:
    build: ./bis-gw
    container_name: bis-gw
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend-vlan
      - backend-vlan
    restart: always
      
  #nginx-proxy:
  #  image: nginxproxy/nginx-proxy
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #  networks:
  #    - frontend-vlan
  #    - backend-vlan
  #  volumes:
  #    - /var/run/docker.sock:/tmp/docker.sock:ro
  #  restart: always

  env_file: docker-compose.env

networks:
  backend-vlan:
    internal: true
  frontend-vlan:  
